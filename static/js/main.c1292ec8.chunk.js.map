{"version":3,"sources":["Setstate.js","logo.svg","Funevent.js","Clevent.js","App.js","reportWebVitals.js","index.js"],"names":["interval","Fun","id","className","onClick","document","getElementById","classList","toggle","Clevent","state","this","message","Component","num","State","count","setInterval","console","log","setState","clearInterval","onMouseOver","increase","onMouseOut","noincrease","decrease","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2IAMIA,E,yCCNW,I,WCaAC,EAXH,WAMR,OACI,wBAAQC,GAAG,KAAKC,UAAU,UAAUC,QANxC,WACkBC,SAASC,eAAe,QAC9BC,UAAUC,OAAO,SAIzB,wD,4BCWOC,E,4MAhBXC,MAAQ,G,6CACR,WAEiBL,SAASC,eAAe,MAC9BC,UAAUC,OAAO,U,oBAK5B,WACI,OACI,wBAAQN,GAAG,OAAOE,QAASO,KAAKC,QAAST,UAAU,UAAnD,0C,GAZUU,aHClBC,EAAM,EAgFKC,E,4MA1EXL,MAAQ,CACJM,MAAO,EAEPF,IAAI,G,8CAGR,WACId,EAAWiB,aAAY,WAC3BH,IAAQA,EACRI,QAAQC,IAAIL,KAIb,KAYCH,KAAKS,SAAS,M,wBA2Bd,WACQC,cAAcrB,K,sBAGtB,WAAW,IAAD,OACNW,KAAKS,SAAS,CACVJ,MAAOL,KAAKD,MAAMM,MAAO,IAC3B,WAAKE,QAAQC,IAAI,4BAA4B,EAAKT,MAAMM,Y,oBAE9D,WAAU,IAAD,OACL,OAEI,gCAEI,wBAAQM,YAAa,kBAAI,EAAKC,YAAaC,WAAY,kBAAI,EAAKC,cAActB,UAAU,OAAxF,eACA,wCAAWQ,KAAKD,MAAMI,OACtB,wBAAQQ,YAAa,kBAAI,EAAKI,YAAYvB,UAAU,OAApD,sB,GAtEIU,aIsDLc,MAzBf,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACN,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UC/BeyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASC,eAAe,SAM1BsB,K","file":"static/js/main.c1292ec8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n// var num = 0;\r\n\r\nvar num = 0;\r\nvar numtwo = num;\r\nvar interval;\r\n\r\nclass State extends Component {\r\n    \r\n    state = {\r\n        count: 0,\r\n        // interval:num\r\n        num:0\r\n    }\r\n       \r\n    increase(){\r\n        interval = setInterval(function(){\r\n    num = ++num;\r\n    console.log(num);\r\n    // this.state({\r\n    //     // num:this.state.num++\r\n    // })\r\n}, 100);\r\n\r\n\r\n        // this.setState({\r\n\r\n            \r\n        //     num: this.state.num\r\n        // },()=>{console.log(\"callback increase value= \",this.state.count)} )\r\n        \r\n        \r\n\r\n\r\n    this.setState({\r\n        // num:this.state.setInterval()\r\n        // num: this.state.num+1\r\n        // interval:this.state.num\r\n        // setInterval();\r\n        // num:this.state.interval\r\n\r\n        // var : num = 0,\r\n        // num:++num,\r\n        // num: this.state.num\r\n\r\n\r\n        \r\n    })\r\n    \r\n\r\n\r\n   \r\n        \r\n        \r\n        // this.setState({\r\n        //     count: this.state.count +1\r\n        // },()=>{console.log(\"callback increase value= \",this.state.count)} )\r\n\r\n    \r\n    }\r\n\r\n    noincrease(){\r\n            clearInterval(interval);\r\n    }\r\n\r\n    decrease(){\r\n        this.setState({\r\n            count: this.state.count -1\r\n        },()=>{console.log(\"callback decrease value= \",this.state.count)} )\r\n    }\r\n    render() { \r\n        return ( \r\n\r\n            <div>\r\n                \r\n                <button onMouseOver={()=>this.increase()}  onMouseOut={()=>this.noincrease()} className=\"icon\">+</button>\r\n                <h3>Count {this.state.num}</h3>\r\n                <button onMouseOver={()=>this.decrease()} className=\"icon\">-</button>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default State;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './App.css';\r\nconst Fun = () => {\r\n    function message(){\r\n        var element = document.getElementById('pink')\r\n        element.classList.toggle('pink')\r\n    }\r\n\r\n    return (  \r\n        <button id=\"hi\" className=\"padding\" onClick={message}>Click me to change function event handler</button>\r\n    );\r\n}\r\n \r\nexport default Fun;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass Clevent extends Component {\r\n    state = {  }\r\n    message(){\r\n\r\n        var change = document.getElementById('hi');\r\n        change.classList.toggle('blue')\r\n        \r\n        // change.css({color:black})\r\n        // alert('Your message')\r\n    }\r\n    render() { \r\n        return ( \r\n            <button id=\"pink\" onClick={this.message} className=\"padding\">Click me class component</button>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Clevent;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Fun from './Funevent';\nimport Clevent from './Clevent';\nimport State from './Setstate';\n// import React, { Component } from 'react';\n// class App extends Component {\n//   // state = {  }\n//   constructor(){\n//     super()\n//     this.state={\n//       message:'Change me !'\n//     };\n//   }\n//   changeMessage(){\n//     this.setState({message:'React text changed!'})\n//   }\n\n//   render() { \n//     return (\n//          <div className=\"App\">\n//             <header className=\"App-header\">\n//               <h1>hey class component</h1>\n//               <button onClick={()=>this.changeMessage()}>Change</button>\n//               <h3>{this.state.message}</h3>\n//             </header>\n//          </div> \n         \n//          );\n//   }\n\n\n// }\n \n// export default App;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n<Fun />\n<Clevent />\n<State />\n\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        {/* <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p> */}\n        {/* <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Than Htut Zaw\n        </a> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}