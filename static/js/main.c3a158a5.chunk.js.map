{"version":3,"sources":["logo.svg","Funevent.js","Clevent.js","Setstate.js","Bindevent.js","If.js","Maplistrender2.js","Maplistrender.js","Getmethodfakerestapi.js","App.js","reportWebVitals.js","index.js"],"names":["Fun","id","className","onClick","document","getElementById","classList","toggle","Clevent","state","this","message","Component","State","props","count","interval","setInterval","setState","prevState","clearInterval","onMouseOver","increase","onMouseOut","noincrease","decrease","nodecrease","Bind","handle","bind","If","a","condition","target","value","noValidate","autoComplete","TextField","label","variant","onChange","Button","color","InputLabelProps","style","Maplistrender2","object","name","Maplistrender","map","Getmethodfakerestapi","axios","get","then","response","console","log","catch","error","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c3a158a5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './App.css';\r\nconst Fun = () => {\r\n    function message(){\r\n        var element = document.getElementById('pink')\r\n        element.classList.toggle('pink')\r\n    }\r\n\r\n    return (  \r\n        <button id=\"hi\" className=\"padding\" onClick={message}>Click me to change function event handler</button>\r\n    );\r\n}\r\n \r\nexport default Fun;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass Clevent extends Component {\r\n    state = {  }\r\n    message(){\r\n\r\n        var change = document.getElementById('hi');\r\n        change.classList.toggle('blue')\r\n        \r\n        // change.css({color:black})\r\n        // alert('Your message')\r\n    }\r\n    render() { \r\n        return ( \r\n            <button id=\"pink\" onClick={this.message} className=\"padding\">Hi Click me class component</button>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Clevent;","import React, { Component } from 'react';\r\nimport './App.css';\r\n// var num = 0;\r\n\r\nvar num = 0;\r\nvar numtwo = num;\r\nvar interval;\r\n\r\nclass State extends Component {\r\n\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            count:0\r\n        }\r\n    }\r\n    \r\n    // state = {\r\n    //     count: 0,\r\n    //     // interval:num\r\n    //     num:0\r\n    // }\r\n       \r\n    increase(){\r\n       this.interval = setInterval(() => {\r\n\r\n\r\n           this.setState(prevState=>({\r\n               count :prevState.count +1\r\n        }))\r\n\r\n       }, 100);\r\n    }\r\n\r\n\r\n\r\n    // num = ++num;\r\n    // console.log(num);\r\n    // this.state({\r\n    //     // num:this.state.num++\r\n    // })\r\n // }, 100);\r\n\r\n\r\n        // this.setState({\r\n\r\n            \r\n        //     num: this.state.num\r\n        // },()=>{console.log(\"callback increase value= \",this.state.count)} )\r\n        \r\n        \r\n\r\n\r\n    // this.setState({\r\n        // num:this.state.setInterval()\r\n        // num: this.state.num+1\r\n        // interval:this.state.num\r\n        // setInterval();\r\n        // num:this.state.interval\r\n\r\n        // var : num = 0,\r\n        // num:++num,\r\n        // num: this.state.num\r\n\r\n\r\n        \r\n    // })\r\n    \r\n\r\n\r\n   \r\n        \r\n        \r\n        // this.setState({\r\n        //     count: this.state.count +1\r\n        // },()=>{console.log(\"callback increase value= \",this.state.count)} )\r\n\r\n    \r\n    // }\r\n\r\n    noincrease(){\r\n            clearInterval(this.interval);\r\n    }\r\n\r\n    decrease(){\r\n           this.interval = setInterval(() => {\r\n           this.setState(prevState=>({\r\n               count :prevState.count - 1\r\n        \r\n        }))\r\n       }, 100);\r\n        // this.setState({\r\n        //     count: this.state.count -1\r\n        // },()=>{console.log(\"callback decrease value= \",this.state.count)} )\r\n    }\r\n    nodecrease(){\r\n            clearInterval(this.interval);\r\n    }\r\n    render() { \r\n        const {count} = this.state\r\n        return ( \r\n\r\n            <div>\r\n                \r\n                <button onMouseOver={()=>this.increase()}  onMouseOut={()=>this.noincrease()} className=\"icon padding\">+</button>\r\n                <h3>Countttt {count}</h3>\r\n                <button onMouseOver={()=>this.decrease()} onMouseOut={()=>this.nodecrease()}  className=\"icon padding\">-</button>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default State;\r\n","import React, { Component } from 'react';\r\n\r\nclass Bind extends Component {\r\n    state = {  }\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n        message:\"Bind me!\"\r\n        }\r\n        \r\n        this.handle = this.handle.bind(this)\r\n\r\n    }\r\n    // handle =()=>{\r\n    //     this.setState({\r\n    //         message:\"you changed me!\"\r\n    //     })\r\n    // }\r\n    handle =()=>{\r\n        this.setState({\r\n            message:\"you changed me!\"\r\n        })\r\n    }\r\n\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n            <h3>{this.state.message}</h3>\r\n            {/* <button onClick={this.handle}  className=\"padding\">9. Bind Event</button> */}\r\n            <button onClick={this.handle}  className=\"padding\">9. Bind Event</button>\r\n            \r\n       \r\n            </div>\r\n            \r\n         );\r\n    }\r\n}\r\n \r\nexport default Bind;","import React, { Component } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\n// import Classes from '@material-ui/core/Class';\r\nclass If extends Component {\r\n  // state = {\r\n  //     condition : \"hiddd\"\r\n  //  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      condition: \"null\",\r\n    };\r\n  }\r\n\r\n  handle = (a) => {\r\n    this.setState((prevState) => ({\r\n      condition: a.target.value,\r\n    }));\r\n    // console.log(a.target.value)\r\n    //         // alert(e.target.value)\r\n  };\r\n\r\n  render() {\r\n    // return (\r\n    //     <div>\r\n    //         <h2>10. Condtition test</h2>\r\n    //         answer is condition={this.state.condition}\r\n\r\n    //     </div>\r\n\r\n    //  );\r\n\r\n    // if(this.state.condition == \"hi\")\r\n    // return(\r\n    //     <h1>hi</h1>\r\n    // )\r\n    // else{\r\n    //     return(\r\n    //     <h1>no</h1>\r\n    // )\r\n\r\n    // }\r\n    //         { return this.state.condition == \"hi\" ?  <p>say hi</p> : <p>say other</p>\r\n\r\n    //  }\r\n\r\n    if (this.state.condition == \"hi\")\r\n      return (\r\n        <div>\r\n          <h2>10. Condtition test</h2>\r\n          <form noValidate autoComplete=\"off\">\r\n            {/* <TextField  id=\"standard-basic\" label=\"Standard\" /> */}\r\n            {/* <TextField  id=\"filled-basic\" label=\"Filled\" variant=\"filled\" /> */}\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Outlined\"\r\n              variant=\"outlined\"\r\n              onChange={this.handle}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              My button\r\n            </Button>\r\n          </form>\r\n          you typed={this.state.condition}\r\n          <br />\r\n          answer is hi\r\n          <h3>same hi</h3>\r\n          <hr />\r\n        </div>\r\n      );\r\n    else {\r\n      return (\r\n        <div>\r\n          <h2>10. Condtition test</h2>\r\n          <form noValidate autoComplete=\"off\">\r\n            {/* <TextField  id=\"standard-basic\" label=\"Standard\" /> */}\r\n            {/* <TextField  id=\"filled-basic\" label=\"Filled\" variant=\"filled\" /> */}\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"Outlined\"\r\n              variant=\"outlined\"\r\n              onChange={this.handle}\r\n               InputLabelProps={{\r\n    style: { color: '#fff' },\r\n  }}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              My button\r\n            </Button>\r\n          </form>\r\n          you typed={this.state.condition}\r\n          <br />\r\n          answer is hi\r\n          <h3>different</h3>\r\n          <hr />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    //  <div><h1>10. Condtition test</h1>\r\n    //      answer is condition={this.state.condition}\r\n    //     {this.state.condition == \"hi\" ? <p>say hi</p> : <p>say other</p>}\r\n    //     if statement\r\n\r\n    //     {/* {if(this.state.condition == \"hi\") }\r\n\r\n    //      return(10. Condtition test)\r\n\r\n    //     else return (10. Condtition test) */}\r\n\r\n    // <hr/>\r\n    // </div>\r\n\r\n    // answer is condition={this.state.condition}\r\n  }\r\n}\r\n\r\nexport default If;\r\n","import React from 'react';\r\nconst Maplistrender2 = (props) => {\r\n    const {object} = props;\r\n\r\n    return (\r\n        <div>\r\n            <h4>\r\n             {object.id} is my id and my name is {object.name}\r\n           </h4>\r\n        </div> \r\n\r\n\r\n     );\r\n}\r\n \r\nexport default Maplistrender2;","import React from \"react\";\r\nimport Maplistrender2 from \"./Maplistrender2\";\r\n\r\nconst Maplistrender = () => {\r\n  const list = [\"mg mg\", \"aye aye\"];\r\n  const objects = [\r\n    {\r\n      id: \"id\",\r\n      name: \"name\",\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"mg mg\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"aye aye\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"may\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <h1>11. hey map list render 1</h1>\r\n      <h4>\r\n        Normal array\r\n        <hr />\r\n        {list.map((a) => (\r\n          <h3>{a}</h3>\r\n        ))}\r\n      </h4>\r\n      <br />\r\n      <h3>Object array</h3>\r\n      <hr />\r\n      <h4>\r\n        {objects.map((object) => \r\n        <Maplistrender2 object={object} />\r\n        // (\r\n        //   <h4>\r\n        //     {object.id} is my id and my name is {object.name}\r\n        //   </h4>\r\n        // )\r\n        )}\r\n      </h4>\r\n\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Maplistrender;\r\n","import axios from 'axios'\r\nimport React, { Component } from 'react'\r\nimport {Button} from '@material-ui/core'\r\n \r\nclass Getmethodfakerestapi extends Component {\r\n    componentDidMount(){\r\n        axios.get(\"https://jsonplaceholder.typicode.com/posts\")\r\n        .then((response)=>{\r\n            console.log(response)\r\n\r\n        })\r\n\r\n        .catch( (error) => {\r\n            console.log(error)\r\n\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>12. get method fake rest api with axios</h1>\r\n                lists of fake api<Button variant=\"contained\" color=\"secondary\">Toggle</Button>\r\n                <hr />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Getmethodfakerestapi\r\n","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Fun from './Funevent';\nimport Clevent from './Clevent';\nimport State from './Setstate';\nimport Bind from './Bindevent';\nimport If from './If';\nimport Maplistrender from './Maplistrender';\nimport Getmethodfakerestapi from './Getmethodfakerestapi';\n// import React, { Component } from 'react';\n// class App extends Component {\n//   // state = {  }\n//   constructor(){\n//     super()\n//     this.state={\n//       message:'Change me !'\n//     };\n//   }\n//   changeMessage(){\n//     this.setState({message:'React text changed!'})\n//   }\n\n//   render() { \n//     return (\n//          <div className=\"App\">\n//             <header className=\"App-header\">\n//               <h1>hey class component</h1>\n//               <button onClick={()=>this.changeMessage()}>Change</button>\n//               <h3>{this.state.message}</h3>\n//             </header>\n//          </div> \n         \n//          );\n//   }\n\n\n// }\n \n// export default App;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Getmethodfakerestapi />\n        <Maplistrender />\n        <If />\n<Bind />\n<Fun />\n<Clevent />\n<State />\n\n\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        {/* <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p> */}\n        {/* <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Than Htut Zaw\n        </a> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}